/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    List<Integer> list=new ArrayList<Integer>();
    public List<Integer> preorderTraversal(TreeNode root) {
        Stack<TreeNode> stack=new Stack<TreeNode>();
        TreeNode node =root;
        while(null != node || !stack.isEmpty()){
           if (null!=node){
                list.add(node.val);
                stack.add(node);
                node=node.left;
            }
            else{
            node=stack.pop();
            node =node.right;
            }
        }
        
        return list;
    }
}
