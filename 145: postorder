/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public List<Integer> postorderTraversal(TreeNode root) {
        
        LinkedList<Integer> list=new LinkedList<Integer>();
        Stack<TreeNode> stack=new Stack<TreeNode>();
        TreeNode current=root;
       
        while(current!=null || !stack.isEmpty()){
            if(current!=null){
            list.addFirst(current.val);
            stack.add(current);
            current=current.right;
            }
           else
             {
             current=stack.pop();
               current=current.left;
             }
            
        }
        
       
        return list;
    }
}
